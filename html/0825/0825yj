1. 속성 선택자(Attribute Selectors)
    < 속성 선택자(Attribute Selectors) >
    - 지정된 속성 또는 value 에 의해 요소를 결정하여 스타일링 적용.
    /* id 속성을 가진 요소. */ [id]
    /* input 태그 중 id 속성을 가진 요소. */ input[id]
    /* id 속성이 value 인 요소. */ [id="lg"]
    /* value 가 디폴트로 설정된 값이 있다하더라도 명시적 지정이 되어 있지 않으면 미적용. */ [target="_self"]
    /* ol 태그 자손 요소중 href 속성을 가진 요소. */ ol [ href]
    /* href 속성과 target 속성을 가진 요소. */ [href][target]
    /* 지정된 value("font")로 시작되는 class 속성 값을 가진 요소. */ [class^="font"]
    /* 지정된 value("Size")로 끝나는 class 속성 값을 가진 요소. 매칭 시 대소문자를 구분함에 주의. */ [class$="Size"]
    /* 지정된 value("co.")가 포함되는 href 속성 값을 가진 요소. */ [href*="co."]

2. 가상 클래스 선택자(Pseduo-class Selectors)
    < 가상 클래스 선택자(Pseduo-class Selectors) >
    - 선택자에 의해 지정된 요소가 특정 상태일 때 스타일링 적용.가상이라 함은 HTML 코드가 실제 존재하지 않는 상태에서 지정함을 의미.
    :hover - 지정된 요소에 마우스 포인터를 올리면 스타일 적용
    :focus - 링크, 입력상자, 버튼등에 마우스나 TAB 키로 포커스가 맺혔을 때 스타일 적용. 웹페이지에서는 손이나 팔이 불편한 장애자를 위해 링크, 입력상자, 버튼등에 TAB 키로 포커스를 맞출수 있게 하는 기능이 제공되는데, 이 때의 상태를 규정함으로써 사용자에게 편의를 제공.
    :active - 링크나 버튼등을 눌렀을 때 스타일 적용.
    :visited - 이미 방문한 링크인 경우에 스타일 적용.
    :checked - radio 나 checkbox 버튼 등이 체크되었을 때 스타일 적용.
    단, radio 나 checkbox 버튼에 모양에 대한 직접적인 스타일 적용은 불가. 
    ※ radio 나 checkbox 버튼 모양은 직접적인 형태 변경이 불가하여 다른형태로 재구현하는 것이 일반적.
    :target - 페이지 내부 링크에 의해 지목된 id 를 가진 요소에 대한 스타일 적용.
    :enabled - 텍스트 입력상자나 버튼 등이 활성화된 상태일 때 스타일 적용.
    :disabled - 텍스트 입력상자나 버튼 등이 비활성화된 상태일 때 스타일 적용.
    :not( 선택자 )  - not 에 지정된 선택자가 아닌 요소에 스타일 적용.

3. 트리 구조 가상 클래스 선택자(Tree-structural poseduo-class Selectors)
    < 트리 구조 가상 클래스 선택자(Tree-structural poseduo-class Selectors) >
    - HTML 문서 내에서 임의 부모 요소를 기준으로 자식 관계가 성립되는 형제 요소에 대한 위치와 관련된 스타일링 적용.
    < first-child, last-of-type, nth-of-type >
    - 부모 요소를 기준으로 서로 다른 형제 요소들을 포함한 순번에서의 지정된 위치와 지정된 요소가 모두 일치해야만 스타일 적용.
    < nth-child(An + B) >
    - 구분자 소괄호 내에서 산술 연산을 통한 자식 요소의 선택이 가능.n 을 0 부터 카운팅을 늘리면서 *, +, - 연산과 부호 적용을 통한
    다중 선택과 범위 지정 선택이 가능.
    단, * 연산자는 생략해야 하며 연산에 의해 결정된 자식 요소는 0 이 아닌 첫 번째(1) 요소부터 카운팅되어 선택됨에 주의.
    < first-of-type, last-of-type, nth-of-type >
    - first-child, last-child, nth-child 등은 부모 요소를 기준으로 모든 다른 형제 요소들을 포함한 순번에서의 지정된 위치와 지정된 요소가 모두 일치해야만 스타일이 적용되지만, type 은 지정된 동일 타입의 형제 요소들 중에서만 순번을 매칭시켜 스타일이 적용되는 특성.

4. 예제
    < 문제 >

    1. 텍스트 크기
    - 테이블 기본 크기 : 30px
    - 품목 별 단가, 수량 데이터 텍스트 : 22px
    - 과일 재고수량 데이터 텍스트 : 25px

    2. 테이블 개별 셀(Cell) 배경 및 텍스트의 색상은 화면구현 예시를 참조.

    3. 열 너비
    - 1번 열 : 50px
    - 2번 열 : 100px
    - 3번 열 : 120px
    - 4번 열 : 120px

    4. 행 높이

    - 테이블 헤드 : 60px
    - 테이블 바디의 개별 행 : 50px
    - 테이블 풋 : 60px

    5. 테이블 셀 테두리
    - 선두께 : 1px
    - 선종류 : 실선
    - 선색상 : 녹색

    6. 선택자 구현 시 class, id 선택자 사용 불가.

    7. "과일 재고수량"을 제외한 모든 개별 데이터 셀에 마우스를 올리면
        배경색을 "silver", 텍스트 크기를 30px로 보이도록 설정.
        - 선택자에 tbody 지정 불가.
        - 트리구조 가상 클래스 선택자 사용 불가.

    8. 그 외 사항은 화면구현 예시를 참조하여 동일하게 나타나도록 구현.
    -->
